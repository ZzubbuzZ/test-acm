apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-test-app
  namespace: team-1
  labels:
    app: my-test-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-test-app
  template:
    metadata:
      labels:
        app: my-test-app
    spec:
      containers:
      - name: hello-container
        image: us-docker.pkg.dev/google-samples/containers/gke/hello-app:1.0
        ports:
        - name: http-server
          containerPort: 8080
        env:
        - name: DATABASE_NAME
          value: "postgres"
        - name: DATABASE_USER
          value: "postgres"
        - name: DATABASE_HOST
          value: "python-guestbook-db"
        - name: DATABASE_PORT
          value: "5432"
---
apiVersion: v1
kind: Service
metadata:
  name: my-test-service
#  annotations:
#    networking.gke.io/load-balancer-type: "Internal"
#    configmanagement.gke.io/managed: disabled
#    cloud.google.com/app-protocols: '{"my-http-port":"HTTP"}'
  namespace: team-1
  labels:
    secured: "team1"
    pouet: "tut"
spec:
#  type: ClusterIP
  type: NodePort
#  type: LoadBalancer
  selector:
    app: my-test-app
  ports:
  - name: my-http-port
    protocol: TCP
    port: 80
    targetPort: http-server
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  annotations:
#    configmanagement.gke.io/managed: disabled
    # If the class annotation is not specified it defaults to "gce".
    kubernetes.io/ingress.class: "gce"
spec:
  rules:
  - http:
      paths:
      - path: /toto
        pathType: ImplementationSpecific
        backend:
          service:
            name: my-test-service
            port:
              number: 80